function setMarlMode(){let e=!1;"undefined"!=typeof servers&&Array.isArray(servers)&&servers.length?"file:"===location.protocol?marlConsole("Server mode is incompatible with the <b>file:</b> protocol. Running in local mode.","error"):(e=!0,marlConsole(`üåç Operating in server mode, ${servers.length} path${servers.length>1?"s":""} defined.`)):marlConsole("üè† Operating in local mode."),Alpine.store("files").serverMode=e}function initServerMode(){let e=[];for(const o of servers){let t={path:"",actor:"waiting",outbox:"waiting",bookmarks:"waiting",likes:"waiting",failed:!1},r=o;0!==o.indexOf("http")&&(r=marlBasePath()+o),"/"!==r.slice(-1)&&(r+="/"),t.path=r,e.push(t)}Alpine.store("files").remotes=e,loadRemoteArchives()}function loadRemoteArchives(){Alpine.store("files").loading=!0;for(let e=0;e<Alpine.store("files").remotes.length;e++)loadRemoteArchive(e)}function loadRemoteArchive(e){const o=Alpine.store("files").remotes[e];marlConsole(`Loading remote archive #${e}: <b>${o.path}</b>`),fetchRemoteFile(e,"actor"),fetchRemoteFile(e,"outbox"),fetchRemoteFile(e,"likes"),fetchRemoteFile(e,"bookmarks")}async function fetchRemoteFile(e,o){const t=Alpine.store("files").remotes[e];let r=o+".json";"outbox"===o&&(r="outbox-public.json");let i=t.path+r;fetch(i).then((t=>{if(t.ok)return t.json();throw Alpine.store("files").remotes[e][o]="error",new Error("Not 2xx response",{cause:t})})).then((t=>{Alpine.store("files").remotes[e][o]=t})).catch((i=>{switch(console.error(`Error fetching ${r}:`,i),Alpine.store("files").remotes[e][o]="error",o){case"bookmarks":case"likes":marlConsole(`Failed to load <b>${r}</b> from <b>${t.path}</b>. MARL can still operate without this file.`,"warn");break;case"outbox":case"actor":marlConsole(`Failed to load <b>${r}</b> from <b>${t.path}</b>. MARL cannot parse the archive without this file.`,"error")}})).finally((()=>{checkRemotesLoadingStatus()}))}function checkRemotesLoadingStatus(){const e=Alpine.store("files").remotes;let o=0;for(let t=0;t<e.length;t++){const r=e[t];if("waiting"===r.actor||"waiting"===r.outbox||"waiting"===r.bookmarks||"waiting"===r.likes)return!1;"error"!==r.actor&&"error"!==r.outbox?o++:Alpine.store("files").remotes[t].failed||(marlConsole(`‚ö†Ô∏è Failed to load the archive at <b>${r.path}</b>.`,"error"),Alpine.store("files").remotes[t].failed=!0)}o>0?loadRemotesData():(Alpine.store("files").loadingFailed=!0,e.length>1?marlConsole("All remote archives failed to load. üò≠","error"):marlConsole("Remote archive failed to load. üò≠","error"))}function loadRemotesData(){const e=Alpine.store("files").remotes;let o=[];for(let t=0;t<e.length;t++){const r=e[t];r.failed||o.push(r)}for(let e=0;e<o.length;e++){const t=o[e];Alpine.store("files").sources[e]={id:e,archiveBasePath:t.path,nbToots:0,actor:{},outbox:{},likes:[],bookmarks:[]},loadJsonData("actor",t.actor,e),loadJsonData("outbox",t.outbox,e),"error"===t.likes&&(t.likes={orderedItems:[]}),"error"===t.bookmarks&&(t.bookmarks={orderedItems:[]}),loadJsonData("likes",t.likes,e),loadJsonData("bookmarks",t.bookmarks,e)}Alpine.store("files").remotes=[],Alpine.store("files").loading=!1}function initLocalMode(){loadScript("jszip"),drag.init("app")}function loadZipFiles(e){if(!serverMode()&&!Alpine.store("files").loading){0===Alpine.store("files").sources.length&&resetStores(),Alpine.store("files").loading=!0;for(let o=0;o<e.length;o++){const t=e[o];zipFileAlreadyLoaded(t)||(marlConsole(`Loading file: <b>${t.name}</b>`,"info"),Alpine.store("files").loadingQueue.push(t))}startQueue()}}function startQueue(){Alpine.store("files").loadingQueue.length?unzipFirstFile():endQueue()}function unzipFirstFile(){const e=Alpine.store("files").loadingQueue[0],o=e.name+e.size;if(Alpine.store("files").currentlyLoading[o]&&Alpine.store("files").currentlyLoading[o].working)return!1;Alpine.store("files").currentlyLoading[o]={error:!1,working:!0,actor:!1,outbox:!1,likes:!1,bookmarks:!1,avatar:!1,header:!1},Alpine.store("files").currentlyLoadingId=o,Alpine.store("files").currentlyLoadingName=e.name,unzipStart(e)}function unzipStart(e){JSZip.loadAsync(e).then((o=>{let t=checkZipStructure(o,e.name);if(!1===t)return void abortLoading(Alpine.store("files").currentlyLoadingId,"critical file is missing in archive");!0===t?t="":t+="/";const r=Alpine.store("files").sources.length;Alpine.store("files").sources[r]={id:r,fileInfos:{id:e.name+e.size,name:e.name,size:e.size,lastModified:e.lastModified,archiveRoot:t},nbToots:0,actor:{},outbox:{},likes:[],bookmarks:[],avatar:{},header:{}},Alpine.store("files").sources[r]._raw=o.files,unpackJsonFile("actor",r),unpackJsonFile("outbox",r),unpackJsonFile("likes",r),unpackJsonFile("bookmarks",r)}),(o=>{const t=`Error loading <b>${e.name}</b>: ${o.message}`;console.error(t),marlConsole(t,"error"),abortLoading(Alpine.store("files").currentlyLoadingId,t)}))}function checkZipStructure(e,o){let t=!0,r=[];if(void 0===e.files["actor.json"]){const e=`<b>${o}</b>: File "actor.json" not found in archive root.`;r.push({txt:e,cls:"warn"}),t=!1}if(void 0===e.files["outbox.json"]){const e=`<b>${o}</b>: File "outbox.json" not found in archive root.`;r.push({txt:e,cls:"warn"}),t=!1}if(!t){let i,n;const s=e.file(/actor.json$/);s.length&&(i=s[0].name.split("/"),i.pop(),i=i.join("/"));const l=e.file(/outbox.json$/);if(l.length&&(n=l[0].name.split("/"),n.pop(),n=n.join("/")),i&&n)if(i===n){t=i;const e=`<b>${o}</b>: "outbox.json" and "actor.json" both found in the same subfolder (<b>${i}</b>). We'll assume everything else is in that folder too.`;r.push({txt:e,cls:"warn"})}else{const e=`<b>${o}</b>: incoherent structure ("actor.json" and "outbox.json" are not in the same location). Unable to load this archive.`;r.push({txt:e,cls:"error"})}else{const e=`<b>${o}</b>: missing critical files ("actor.json" and/or "outbox.json"). Unable to load this archive.`;r.push({txt:e,cls:"error"})}}return r.length&&r.forEach((e=>{console.warn(e.txt),marlConsole(e.txt,e.cls)})),t}function unpackJsonFile(e,o){const t=Alpine.store("files").sources[o]._raw,r=Alpine.store("files").sources[o].fileInfos,i=r.archiveRoot+e+".json";if(void 0===t[i]&&("likes"===e||"bookmarks"===e)){const o=`<b>${r.name}</b>: File ${e}.json not found in archive.`;return console.warn(o),marlConsole(o,"warn"),void(Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId][e]=!0)}t[i].async("text").then((function(t){let r=JSON.parse(t);loadJsonData(e,r,o)}))}function loadJsonData(e,o,t){if("actor"===e&&(Alpine.store("files").sources[t].actor=o,localMode()&&(loadActorImages(t),Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId].actor=!0)),"outbox"===e){let e=o.orderedItems.reduce(((e,o)=>{let r=preprocessToots(o,t);return r&&e.push(r),e}),[]);Alpine.store("files").toots=Alpine.store("files").toots.concat(e),Alpine.store("files").sources[t].nbToots=e.length,delete o.orderedItems,Alpine.store("files").sources[t].outbox=o,localMode()&&(Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId].outbox=!0)}"likes"!==e&&"bookmarks"!==e||(Alpine.store("files").sources[t][e]=o.orderedItems,localMode()&&(Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId][e]=!0)),localMode()&&unzipEnd()}function loadActorImages(e){const o=Alpine.store("files").sources[e].actor,t=Alpine.store("files").sources[e].fileInfos.archiveRoot,r=Alpine.store("files").sources[e]._raw;if(o.icon&&"Image"===o.icon.type&&o.icon.url&&r[t+o.icon.url]){const i=o.icon;r[t+i.url].async("base64").then((function(o){Alpine.store("files").sources[e].avatar={type:i.mediaType,content:o,noImg:!1},Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId].avatar=!0,unzipEnd()}))}else Alpine.store("files").sources[e].avatar={noImg:!0},Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId].avatar=!0;if(o.image&&"Image"===o.image.type&&o.image.url&&r[t+o.image.url]){const i=o.image;r[t+i.url].async("base64").then((function(o){Alpine.store("files").sources[e].header={type:i.mediaType,content:o,noImg:!1},Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId].header=!0,unzipEnd()}))}else Alpine.store("files").sources[e].header={noImg:!0},Alpine.store("files").currentlyLoading[Alpine.store("files").currentlyLoadingId].header=!0;unzipEnd()}function abortLoading(e){const o=Alpine.store("files").currentlyLoadingId;Alpine.store("files").currentlyLoading[o].error=e,unzipEnd()}function unpackingFinished(){const e=Alpine.store("files").currentlyLoadingId,o=Alpine.store("files").currentlyLoading[e];return!!(o.error||o.actor&&o.outbox&&o.likes&&o.bookmarks&&o.avatar&&o.header)}function unzipEnd(){const e=Alpine.store("files").currentlyLoadingId;unpackingFinished()&&(Alpine.store("files").currentlyLoading[e].working=!1,Alpine.store("files").loadingQueue.shift(),Alpine.store("files").currentlyLoadingId="",Alpine.store("files").currentlyLoadingName="",startQueue())}function endQueue(){Alpine.store("files").loading=!1}