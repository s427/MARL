---
const { type } = Astro.props;
let storeEntry, filterId;

switch (type) {
  case 'hashtags':
    filterId = 'hashtags';
    storeEntry = "listHashtags";
    break;
  case 'mentions':
    filterId = 'mentions';
    storeEntry = "listMentions";
    break;
  case 'boosts':
    filterId = 'boostsAuthors';
    storeEntry = "listBoostsAuthors";
    break;
}

---
<div class="tags-group-header">
  <h3>
    <span x-text={`$t('tags.${type}')`}></span>
    <span class="count">
      (<span x-text={`formatNumber($store.files.${storeEntry}.length)`}></span>)
    </span>
  </h3>
  <div class="tags-group-filter">
    <label
      for={`tags-group-${filterId}-filter`}
      class="visually-hidden"
      x-text={`$t('tags.${type}Filter')`}
    ></label>
    <input
      id={`tags-group-${filterId}-filter`}
      type="text"
      onclick="this.select()"
      x-model.debounce={`$store.files.tagsFilters.${filterId}`}
    />
  </div>
</div>
